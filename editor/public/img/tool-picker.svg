<svg width="100%" height="100%" viewBox="0 0 243 355"
  xmlns="http://www.w3.org/2000/svg"
  xmlns:xlink="http://www.w3.org/1999/xlink">
 <style type="text/css">
  .hitRegion {
   /* Work around Fennec bug 765679 */
   opacity: 0;
   pointer-events: all;
  }
  #medium {
   display: none;
  }
  #full {
   display: none;
  }
  #small-landscape {
   display: none;
  }
  #medium-landscape {
   display: none;
  }
  #full-landscape {
   display: none;
  }
  #sizeChange {
   stroke-width: 0;
   -moz-transition: stroke-width 0.001ms;
   -webkit-transition: stroke-width 0.001ms;
   -ms-transition: stroke-width 0.001ms;
   -o-transition: stroke-width 0.001ms;
   transition: stroke-width 0.001ms;
  }
  @media screen and (orientation: portrait) and (min-width: 120px)
                                            and (max-width: 239px) {
   #small {
    display: none;
   }
   #medium {
    display: block;
   }
  }
  @media screen and (orientation: portrait) and (min-width: 240px) {
   #small {
    display: none;
   }
   #full {
    display: block;
   }
  }
  @media screen and (orientation: landscape) and (max-width: 199px) {
   #small {
    display: none;
   }
   #small-landscape {
    display: block;
   }
   #sizeChange {
    stroke-width:1;
   }
  }
  @media screen and (orientation: landscape) and (min-width: 200px)
                                             and (max-width: 399px) {
   #small {
    display: none;
   }
   #medium-landscape {
    display: block;
   }
   #sizeChange {
    stroke-width:2;
   }
  }
  @media screen and (orientation: landscape) and (min-width: 400px) {
   #small {
    display: none;
   }
   #full-landscape {
    display: block;
   }
   #sizeChange {
    stroke-width:3;
   }
  }
 </style>
 <defs>
  <!-- MediaQueryList listener shim -->
  <g id="sizeChange"/>
  <!-- Pencil -->
  <symbol id="pencil">
   <path d="m48.52.12c10.14,0 20.3.28 30.43-.09 7.23-.27 13.81,1.22 20.16,4.55 3.97,2.08 8.26,3.55 12.24,5.63 4.06,2.12 4.14,5.96.04,7.95-6.88,3.34-13.76,6.96-21.05,9.05-5.08,1.47-10.86.99-16.29.7-17.4-.93-34.8.99-52.19-.24-3.15-.22-6.3-.39-9.46-.48-8.55-.25-14.58-9.55-11.65-17.69 2.05-5.71 5.62-8.29 11.88-8.52 11.96-.45 23.92-.88 35.89-.86z" fill="#3b2c0f"/>
   <path d="m83.33,3.53c-1.11.89-2.75,2.42-3.58,2.9-2.56,1.47-2.81,3.06-.45,4.96 1.89,1.52 3.03,2.73.35,4.98-4.58,3.83 3.43,6.37 4.63,9.32-5.8,1.49-13.74-.12-19.37.04-15.59.44-31.21.21-46.81.05-5.22-.05-10.65.31-13.9-5.53-3.77-6.78.57-16.6 8.08-17.15 22.92-1.69 43.6-.5 66.51-.17 .26.01 3.68.02 4.54.6z" fill="currentColor"/>
   <path d="m101.25,10.18c-.13,1.15-.38,2.3-.35,3.44 .07,2.26 1.3,5.62.27,6.54-2.35,2.11-5.72,3.18-8.78,4.4-5.1,2.04-7.8-2.65-11.41-4.54-2.13-1.11-.08-2.54.93-3.45 2.05-1.85 2.17-3.76.11-5.49-2.45-2.06-1.03-2.64.71-4.3 6.27-5.93 11.93-2.02 17.72.56 1.28.57 1.18.79.8,2.84z" fill="#fcf7df"/>
   <path d="m102.58,13.93c.25-1.91.58-4.78 2.7-4.14s6.54,1.52 6.56,4.55c.03,3.37-4.36,4.11-6.58,4.66s-2.47-3.11-2.68-5.07z" fill="currentColor"/>
  </symbol>
  <!-- Scaled pencils -->
  <!-- I'd love to put the hit region in here as well to save repeating it
       everywhere and duplicating the transform information.
       However, Safari on iOS 5 doesn't dispatch click events to children of
       <use> elements (at least when they are part of <object> content). :(
       So, we have to duplicate the hit test region alongside every
       instantiation of the pencil. :( -->
  <symbol id="pencil-small">
   <use x="10" y="7" xlink:href="#pencil"/>
  </symbol>
  <symbol id="pencil-medium">
   <use x="10" y="7" xlink:href="#pencil" transform="scale(1 1.2)"/>
  </symbol>
  <symbol id="pencil-large">
   <use x="10" y="15" xlink:href="#pencil" transform="scale(1 1.75)"/>
  </symbol>
  <symbol id="pencil-upright">
   <use xlink:href="#pencil" transform="translate(-25 67) rotate(-90 50 15)"/>
  </symbol>
  <!-- Eraser -->
  <symbol id="eraser" viewBox="0 0 60 64">
   <path d="m59.59,22.1c.99,5.6-2.91,9.09-5.8,12.76-5.46,6.93-10.99,13.82-15.93,21.11-.86,1.26-2.56,3.67-3.99,4.17-8.96,3.12-16.35,5.11-25.67.58-6.71-3.26-10.19-11.93-7.01-19.67 2.54-6.2 5.37-12.07 10.08-17.33 6.07-6.79 10.9-13.34 16.31-20.73 1.95-2.66 3.12-3.61 5.67-2.58 8.71,3.53 17.48,6.99 23.61,14.38 2.75,3.31 2.29,4.66 2.73,7.31z" fill="#5b4624" fill-rule="evenodd"/>
   <path d="m32.18,1.66c6.14,2.38 11.83,5.19 16.86,9.04 7.69,5.89 7.51,2.92 1.09,11.18-5.58,7.19-10.73,14.69-16.03,22.07-1.68,2.34-3.41,2.48-5.77.95-6.14-3.99-12.34-7.89-18.58-11.72-2.13-1.31-1.43-2.93-.42-4.11 6.11-7.19 10.41-15.87 17.74-22.04 1.89-1.59 2.2-4.78 5.11-5.37z" fill="#2795b0" fill-rule="evenodd"/>
   <path d="m56.47,16.75c4.54,10.48-1.55,14.22-5.67,19.85-5.13,7.01-11.85,15.6-17.18,22.53-.87-11.72-.52-11.13 4.98-18.53 6.98-9.38 11.09-16.08 17.87-23.85z" fill="#278" fill-rule="evenodd"/>
   <path d="m31.82,51.38c1.31,10.26-1.95,8.77-7.48,9.81-14.92,2.79-23.25-5.22-22.8-15.82 4.96,12.41 19.73,15.11 30.28,6.01z" fill="#f5f3e5" fill-rule="evenodd"/>
   <path d="m20.19,55.25c-6.99.59-11.96-1.41-15.68-7.73-1.22-2.08-2.21-3.73-1.81-6.06 1.05-6.07 3.33-10.53 9.37-5.41 5.25,4.45 11.02,8.37 17.49,10.86 1.25.48 2.89,1.62 1.53,3.2-2.53,2.95-6.94,5.16-10.9,5.14z" fill="#fff" fill-rule="evenodd"/>
  </symbol>
 </defs>
 <!-- Full palette -->
 <g id="full" class="palette">
  <!-- Pencils -->
  <g>
   <use color="#d6011f" xlink:href="#pencil-small"/>
   <path d="m0 0h106l32 21l-32 22h-106Z" class="hitRegion pencil"/>
  </g>
  <g transform="matrix(-1 0 0 1 243 23)">
   <use color="#e47a00" xlink:href="#pencil-small"/>
   <path d="m0 0h106l32 21l-32 22h-106Z" class="hitRegion pencil"/>
  </g>
  <g transform="translate(0 46)">
   <use color="#f4db26" xlink:href="#pencil-small"/>
   <path d="m0 0h106l32 21l-32 22h-106Z" class="hitRegion pencil"/>
  </g>
  <g transform="matrix(-1 0 0 1 243 69)">
   <use color="#9bbb5a" xlink:href="#pencil-small"/>
   <path d="m0 0h106l32 21l-32 22h-106Z" class="hitRegion pencil"/>
  </g>
  <g transform="translate(0 92)">
   <use color="#2f9a4c" xlink:href="#pencil-small"/>
   <path d="m0 0h106l32 21l-32 22h-106Z" class="hitRegion pencil"/>
  </g>
  <g transform="matrix(-1 0 0 1 243 115)">
   <use color="#6cb6e5" xlink:href="#pencil-small"/>
   <path d="m0 0h106l32 21l-32 22h-106Z" class="hitRegion pencil"/>
  </g>
  <g transform="translate(0 138)">
   <use color="#134490" xlink:href="#pencil-small"/>
   <path d="m0 0h106l32 21l-32 22h-106Z" class="hitRegion pencil"/>
  </g>
  <g transform="matrix(-1 0 0 1 243 161)">
   <use color="#944296" xlink:href="#pencil-small"/>
   <path d="m0 0h106l32 21l-32 22h-106Z" class="hitRegion pencil"/>
  </g>
  <g transform="translate(0 184)">
   <use color="#f283ad" xlink:href="#pencil-small"/>
   <path d="m0 0h106l32 21l-32 22h-106Z" class="hitRegion pencil"/>
  </g>
  <g transform="matrix(-1 0 0 1 243 207)">
   <use color="#5e4b10" xlink:href="#pencil-small"/>
   <path d="m0 0h106l32 21l-32 22h-106Z" class="hitRegion pencil"/>
  </g>
  <g transform="translate(0 230)">
   <use color="#3f403b" xlink:href="#pencil-small"/>
   <path d="m0 0h106l32 21l-32 22h-106Z" class="hitRegion pencil"/>
  </g>
  <g transform="matrix(-1 0 0 1 243 253)">
   <use color="white" xlink:href="#pencil-small"/>
   <path d="m0 0h106l32 21l-32 22h-106Z" class="hitRegion pencil"/>
  </g>
  <!-- Eraser -->
  <use x="35" y="283" width="60" height="64" xlink:href="#eraser"/>
  <path d="m0 275h108l30 25v55h-138Z" class="hitRegion eraser"/>
 </g>
 <!-- Medium palette -->
 <g id="medium" class="palette">
  <!-- Pencils -->
  <g>
   <use color="#d6011f" xlink:href="#pencil-medium"/>
   <path d="m0 0h106l32 27l-32 28h-106Z" class="hitRegion pencil"/>
  </g>
  <g transform="matrix(-1 0 0 1 243 30)">>
   <use color="#e47a00" xlink:href="#pencil-medium"/>
   <path d="m0 0h106l32 27l-32 28h-106Z" class="hitRegion pencil"/>
  </g>
  <g transform="translate(0 60)">
   <use color="#f4db26" xlink:href="#pencil-medium"/>
   <path d="m0 0h106l32 27l-32 28h-106Z" class="hitRegion pencil"/>
  </g>
  <g transform="matrix(-1 0 0 1 243 90)">>
   <use color="#9bbb5a" xlink:href="#pencil-medium"/>
   <path d="m0 0h106l32 27l-32 28h-106Z" class="hitRegion pencil"/>
  </g>
  <g transform="translate(0 120)">
   <use color="#6cb6e5" xlink:href="#pencil-medium"/>
   <path d="m0 0h106l32 27l-32 28h-106Z" class="hitRegion pencil"/>
  </g>
  <g transform="matrix(-1 0 0 1 243 150)">>
   <use color="#944296" xlink:href="#pencil-medium"/>
   <path d="m0 0h106l32 27l-32 28h-106Z" class="hitRegion pencil"/>
  </g>
  <g transform="translate(0 180)">
   <use color="#3f403b" xlink:href="#pencil-medium"/>
   <path d="m0 0h106l32 27l-32 28h-106Z" class="hitRegion pencil"/>
  </g>
  <g transform="matrix(-1 0 0 1 243 210)">>
   <use color="white" xlink:href="#pencil-medium"/>
   <path d="m0 0h106l32 27l-32 28h-106Z" class="hitRegion pencil"/>
  </g>
  <!-- Eraser -->
  <use x="20" y="243" width="100" height="100" xlink:href="#eraser"/>
  <path d="m0 235h100l30 25v95h-130Z" class="hitRegion eraser"/>
 </g>
 <!-- Small palette -->
 <g id="small" class="palette">
  <!-- Pencils -->
  <g>
   <use color="#d6011f" xlink:href="#pencil-large"/>
   <path d="m0 0h106l32 51l-32 51h-106Z" class="hitRegion pencil"/>
  </g>
  <g transform="matrix(-1 0 0 1 243 55)">
   <use color="#9bbb5a" xlink:href="#pencil-large"/>
   <path d="m0 0h106l32 51l-32 51h-106Z" class="hitRegion pencil"/>
  </g>
  <g transform="translate(0 110)">
    <use color="#f4db26" xlink:href="#pencil-large"/>
    <path d="m0 0h106l32 51l-32 51h-106Z" class="hitRegion pencil"/>
  </g>
  <g transform="matrix(-1 0 0 1 243 165)">
    <use color="#6cb6e5" xlink:href="#pencil-large"/>
    <path d="m0 0h106l32 51l-32 51h-106Z" class="hitRegion pencil"/>
  </g>
  <!-- Eraser -->
  <use x="20" y="243" width="100" height="100" xlink:href="#eraser"/>
  <path d="m0 220h105l45 70v65h-150Z" class="hitRegion eraser"/>
 </g>
 <!-- Landscape full palette -->
 <g id="full-landscape" class="palette" data-viewBox="0 0 710 145">
  <!-- Pencils -->
  <g>
   <use color="#d6011f" xlink:href="#pencil-upright"/>
   <rect width="50" height="145" class="hitRegion pencil"/>
  </g>
  <g transform="translate(50 0)">
   <use color="#e47a00" xlink:href="#pencil-upright"/>
   <rect width="50" height="145" class="hitRegion pencil"/>
  </g>
  <g transform="translate(100 0)">
   <use color="#f4db26" xlink:href="#pencil-upright"/>
   <rect width="50" height="145" class="hitRegion pencil"/>
  </g>
  <g transform="translate(150 0)">
   <use color="#9bbb5a" xlink:href="#pencil-upright"/>
   <rect width="50" height="145" class="hitRegion pencil"/>
  </g>
  <g transform="translate(200 0)">
   <use color="#2f9a4c" xlink:href="#pencil-upright"/>
   <rect width="50" height="145" class="hitRegion pencil"/>
  </g>
  <g transform="translate(250 0)">
   <use color="#6cb6e5" xlink:href="#pencil-upright"/>
   <rect width="50" height="145" class="hitRegion pencil"/>
  </g>
  <g transform="translate(300 0)">
   <use color="#134490" xlink:href="#pencil-upright"/>
   <rect width="50" height="145" class="hitRegion pencil"/>
  </g>
  <g transform="translate(350 0)">
   <use color="#944296" xlink:href="#pencil-upright"/>
   <rect width="50" height="145" class="hitRegion pencil"/>
  </g>
  <g transform="translate(400 0)">
   <use color="#f283ad" xlink:href="#pencil-upright"/>
   <rect width="50" height="145" class="hitRegion pencil"/>
  </g>
  <g transform="translate(450 0)">
   <use color="#5e4b10" xlink:href="#pencil-upright"/>
   <rect width="50" height="145" class="hitRegion pencil"/>
  </g>
  <g transform="translate(500 0)">
   <use color="#3f403b" xlink:href="#pencil-upright"/>
   <rect width="50" height="145" class="hitRegion pencil"/>
  </g>
  <g transform="translate(550 0)">
   <use color="white" xlink:href="#pencil-upright"/>
   <rect width="50" height="145" class="hitRegion pencil"/>
  </g>
  <!-- Eraser -->
  <use x="610" y="20" width="90" height="96" xlink:href="#eraser"/>
  <rect x="600" width="110" height="145" class="hitRegion eraser"/>
 </g>
 <!-- Landscape medium palette -->
 <g id="medium-landscape" class="palette" data-viewBox="0 0 510 145">
  <!-- Pencils -->
  <g>
   <use color="#d6011f" xlink:href="#pencil-upright"/>
   <rect width="50" height="145" class="hitRegion pencil"/>
  </g>
  <g transform="translate(50 0)">
   <use color="#e47a00" xlink:href="#pencil-upright"/>
   <rect width="50" height="145" class="hitRegion pencil"/>
  </g>
  <g transform="translate(100 0)">
   <use color="#f4db26" xlink:href="#pencil-upright"/>
   <rect width="50" height="145" class="hitRegion pencil"/>
  </g>
  <g transform="translate(150 0)">
   <use color="#9bbb5a" xlink:href="#pencil-upright"/>
   <rect width="50" height="145" class="hitRegion pencil"/>
  </g>
  <g transform="translate(200 0)">
   <use color="#6cb6e5" xlink:href="#pencil-upright"/>
   <rect width="50" height="145" class="hitRegion pencil"/>
  </g>
  <g transform="translate(250 0)">
   <use color="#944296" xlink:href="#pencil-upright"/>
   <rect width="50" height="145" class="hitRegion pencil"/>
  </g>
  <g transform="translate(300 0)">
   <use color="#3f403b" xlink:href="#pencil-upright"/>
   <rect width="50" height="145" class="hitRegion pencil"/>
  </g>
  <g transform="translate(350 0)">
   <use color="white" xlink:href="#pencil-upright"/>
   <rect width="50" height="145" class="hitRegion pencil"/>
  </g>
  <!-- Eraser -->
  <use x="410" y="20" width="90" height="96" xlink:href="#eraser"/>
  <rect x="400" width="110" height="145" class="hitRegion eraser"/>
 </g>
 <!-- Landscape small palette -->
 <g id="small-landscape" class="palette" data-viewBox="0 0 310 145">
  <!-- Pencils -->
  <g>
   <use color="#d6011f" xlink:href="#pencil-upright"/>
   <rect width="50" height="145" class="hitRegion pencil"/>
  </g>
  <g transform="translate(50 0)">
   <use color="#9bbb5a" xlink:href="#pencil-upright"/>
   <rect width="50" height="145" class="hitRegion pencil"/>
  </g>
  <g transform="translate(100 0)">
   <use color="#f4db26" xlink:href="#pencil-upright"/>
   <rect width="50" height="145" class="hitRegion pencil"/>
  </g>
  <g transform="translate(150 0)">
   <use color="#6cb6e5" xlink:href="#pencil-upright"/>
   <rect width="50" height="145" class="hitRegion pencil"/>
  </g>
  <!-- Eraser -->
  <use x="210" y="20" width="90" height="96" xlink:href="#eraser"/>
  <rect x="200" width="110" height="145" class="hitRegion eraser"/>
 </g>
 <script xlink:href="../js/rgbcolor.js" type="text/javascript"/>
 <script type="text/javascript">
 <![CDATA[
  var initialViewBox;

  // Returns a random color _from_one_that_is_currently_visible_ AND which is
  // not too dark, too light, or too grey (so we can see it against the
  // background which is probably either black or white).
  document.getRandomColor = function() {
    var colors = getActiveColors();
    while (colors.length) {
      var i = Math.floor(Math.random() * colors.length);
      var color = colors[i];
      var ls = getLumAndSat(color);
      if (
        ls[0] > 0.1 && ls[0] < 0.9 && // Check luminance is not to dark or too
                                      // light
        ls[1] > 0.1 // Check saturation is not too grey
      ) {
        return color.toHex();
      }
      colors.splice(i, 1); // Remove color from the list
    }
    return "blue";
  }

  function getLumAndSat(color) {
    var max = Math.max(color.r, color.g, color.b) / 255;
    var min = Math.min(color.r, color.g, color.b) / 255;
    var c = max - min;
    var l = (max + min) / 2;
    var s = (c == 0) ? 0 : c / (1 - Math.abs(2*l - 1));
    return [l,s];
  }

  function getActiveColors() {
    var palette = getActivePalette();
    if (!palette)
      return [];

    var colors = new Array();
    var pencils = palette.getElementsByTagName('use');
    for (var i = 0; i < pencils.length; i++) {
      var pencil = pencils[i];
      if (pencil.hasAttribute("color"))
        colors.push(new RGBColor(pencil.getAttribute("color")));
    }
    return colors;
  }

  function getActivePalette() {
    var palettes = document.getElementsByClassName('palette');
    for (var i = 0; i < palettes.length; i++) {
      var palette = palettes[i];
      if (window.getComputedStyle(palette).display !== 'none')
        return palette;
    }
    return null;
  }

  function hit(evt) {
    var target = evt.target;
    // Some browsers don't support classList in SVG :(
    // (i.e. it is defined in HTMLElement, not Element)
    // We only need classList.contains here so just use split and indexOf
    // instead.
    var classList = target.className.baseVal.split(/\s+/);
    var changeEvent = null;
    if (classList.indexOf("pencil") !== -1) {
      var color = target.previousElementSibling.getAttribute("color");
      changeEvent = document.createEvent("CustomEvent");
      changeEvent.initCustomEvent("colorchange", true, true,
        { color: color });
    } else if (classList.indexOf("eraser") !== -1) {
      changeEvent = document.createEvent("CustomEvent");
      changeEvent.initCustomEvent("eraserselect", true, true, null);
    }
    if (changeEvent) {
      document.dispatchEvent(changeEvent);
    }
  }

  document.updateViewbox = function() {
    var palette = getActivePalette();
    if (!palette)
      return;

    var svg = document.documentElement;
    if (palette.hasAttribute('data-viewBox')) {
      svg.setAttribute('viewBox', palette.getAttribute('data-viewBox'));
    } else {
      svg.setAttribute('viewBox', initialViewBox);
    }
  };

  function init() {
    // Register click listeners
    var hitRegions = document.getElementsByClassName('hitRegion');
    for (var i = 0; i < hitRegions.length; i++) {
      hitRegions[i].addEventListener('click', hit, false);
    }

    // Register listeners for changes to landscape size
    // This is to work around:
    // - The fact that you can't yet update the viewBox using CSS
    // - Lack of support for MediaQueryList listeners in most browsers
    // We use the approach outlined in:
    // http://www.paulrhayes.com/2011-11/use-css-transitions-to-link-media-queries-and-javascript/
    var transElem = document.getElementById('sizeChange');
    transElem.addEventListener('transitionend', document.updateViewbox, false);
    transElem.addEventListener('webkitTransitionend', document.updateViewbox,
      false);
    transElem.addEventListener('oTransitionend', document.updateViewbox, false);
    transElem.addEventListener('MSTransitionend', document.updateViewbox,
      false);

    // There seems to be a bug with Gecko's where, when this file is embedded in
    // another changes to the parent window that affect our viewport update us
    // for the purpose of layout but MediaQueryList listener events don't fire
    // and nor do transitions run (or at least, we never get the transitionend
    // event).
    //
    // So we register a MediaQueryList listener on the parent window if there is
    // one.
    if (window.parent) {
      window.parent.matchMedia("screen and (orientation:landscape)").
        addListener(document.updateViewbox);
    }

    initialViewBox = document.documentElement.getAttribute("viewBox");
    document.updateViewbox();

    // Safari desktop seems to apply the media query after page load and so
    // running updateViewbox above will detect that the wrong palette is
    // showing. Hence we run it again in a moment.
    window.setTimeout(document.updateViewbox, 1);
  }
  init();
 ]]>
 </script>
</svg>
